services:
  postgres:
    image: postgres:15-alpine
    container_name: tickets_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-tickets_restau}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - tickets-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tickets_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    networks:
      - tickets-network
    depends_on:
      - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tickets_backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - /var/www/vendor
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - tickets-network
    depends_on:
      - postgres
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-tickets_restau}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_ENV: ${APP_ENV:-local}
    command: php artisan serve --host=0.0.0.0 --port=8000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tickets_frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    networks:
      - tickets-network
    depends_on:
      - backend
    environment: # <-- CORRECTION ICI
      - VITE_API_URL=${VITE_API_URL} # On dit Ã  Docker d'attendre cette variable
    command: npm run dev -- --host

volumes:
  postgres-data:

networks:
  tickets-network:
    driver: bridge
